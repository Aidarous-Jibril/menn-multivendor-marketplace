# server {
#   listen 80;
#   server_name _;

#   # Store app
#   location / {
#     proxy_pass http://frontend:3000;
#     proxy_set_header Host $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   }

#   # Admin app under /admin
#   location /admin {
#     proxy_pass http://frontend_admin:3001;
#     proxy_set_header Host $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   }

#   # API
#   location /api/ {
#     proxy_pass http://backend:8000/api/;
#     proxy_http_version 1.1;
#     proxy_set_header Host $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   }
# }



# Re-resolve Docker service names (frontend, frontend_admin, backend)
resolver 127.0.0.11 ipv6=off valid=10s;

# Upgrade / connection headers (not strictly required, but safe)
map $http_upgrade $connection_upgrade {
  default upgrade;
  ''      close;
}

server {
  listen 80;
  server_name _;

  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto $scheme;
  proxy_set_header Connection $connection_upgrade;
  proxy_read_timeout 60s;
  proxy_connect_timeout 5s;
  proxy_send_timeout 60s;

  # Use variables â†’ forces runtime DNS re-resolution
  set $frontend_upstream       http://frontend:3000;
  set $admin_upstream          http://frontend_admin:3001;
  set $backend_api_upstream    http://backend:8000;

  # Store (Next frontend)
  location / {
    proxy_pass $frontend_upstream;
  }

  # Admin app under /admin
  location /admin/ {
    proxy_pass $admin_upstream;
  }

  # Backend API
  location /api/ {
    proxy_pass $backend_api_upstream;
  }
}
